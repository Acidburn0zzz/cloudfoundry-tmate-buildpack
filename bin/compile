#!/bin/bash

set -e

indent() {
  sed -u 's/^/       /'
}

build=$1
cache=$2

#ensure it exists
mkdir -p ${cache}

tmate_file="tmate.tgz"

libe_version="2.0.21"
libe_dir="libevent-${libe_version}-stable"
libe_file="${libe_dir}.tar.gz"
libe_url="http://cloud.github.com/downloads/libevent/libevent/${libe_file}"

expect_version="5.45"
expect_dir="expect${expect_version}"
expect_file="expect_dir.tar.gz"
expect_url="http://downloads.sourceforge.net/project/expect/Expect/${expect_version}/expect${expect_version}.tar.gz"

cache_target=${cache}/${tmate_file}
build_target=${build}
target=/app/.local

if [ ! -f ${cache_target} ]; then
  echo "=====> No cached compile detected. Bulding..."
  cd $build

  echo "-----> Compiling libevent v${libe_version}..."
  #Compile libevent
  curl -s ${libe_url} > ${libe_file}
  tar zxf ${libe_file}
  cd ${libe_dir}
  ./configure --prefix=${target} | indent
  make install | indent
  cd ..

  echo "-----> Compiling expect v${expect_version}..."
  #Compile libevent
  curl -s ${expect_url} > ${expect_file}
  tar zxf ${expect_file}
  cd ${expect_dir}
  ./configure --prefix=${target} | indent
  make install | indent
  cd ..

  # download tmate
  echo "-----> Downloading tmate..."
  curl -s https://s3.amazonaws.com/tmate-buildpack-assets/tmate > ${target}/bin/tmate
  chmod +x ${target}/bin/tmate

  #Create cache slug
  tar czf ${cache_target} -C ${target} .
fi

mkdir -p ${build_target}
tar xzf ${cache_target} -C ${build_target}

chmod +x ${build_target}/bin/tmate
ln -s ${build_target}/bin/tmate /home/vcap/app

mkdir -p $build/.profile.d
echo 'export LD_LIBRARY_PATH=/app/lib' > $build/.profile.d/tmate.sh
echo 'export TERM=screen-256color' >> $build/.profile.d/tmate.sh
echo 'ssh-keygen -q -t rsa -f /home/vcap/.ssh/id_rsa -N ""' >> $build/.profile.d/tmate.sh
