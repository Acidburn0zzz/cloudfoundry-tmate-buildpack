#!/bin/bash

set -e

indent() {
  sed -u 's/^/       /'
}

build=$1
cache=$2

#ensure it exists
mkdir -p ${cache}

tmate_file="tmate.tgz"

libe_version="2.0.21"
libe_dir="libevent-${libe_version}-stable"
libe_file="${libe_dir}.tar.gz"
libe_url="http://cloud.github.com/downloads/libevent/libevent/${libe_file}"

tmate_version="1.8.9"
tmate_dir="tmate-${tmate_version}"
tmate_file="tmate-${tmate_version}.tar.gz"
tmate_url="https://codeload.github.com/nviennot/tmate/tar.gz/${tmate_version}"

cache_target=${cache}/${tmate_file}
build_target=${build}/.local
target=/app/.local

if [ ! -f ${cache_target} ]; then
  echo "No cached compile detected. Bulding..." | indent
  cd $build

  echo "Compiling libevent v${libe_version}..." | indent
  #Compile libevent
  curl -s ${libe_url} > ${libe_file}
  tar zxf ${libe_file}
  cd ${libe_dir}
  ./configure --prefix=${target} | indent
  make install | indent
  cd ..

  # download or install tmate
  echo "Compiling tmate v${tmate_version}..." | indent

  #Compile tmate
  curl -s ${tmate_url} > ${tmate_file}
  tar zxf ${tmate_file}
  cd ${tmate_dir}
  ./autogen.sh | indent
  ./configure --prefix=${target} | indent
  make | indent
  make install | indent
  cd ..

  # download go proxy


  #Create cache slug
  tar czf ${cache_target} -C ${target} .
fi

mkdir -p ${build_target}
tar xzf ${cache_target} -C ${build_target}

mkdir -p $build/.profile.d
echo 'export LD_LIBRARY_PATH=/app/.local/lib' > $build/.profile.d/tmate.sh
echo 'mkdir -p /app/.ssh' >> $build/.profile.d/tmate.sh
echo 'export TERM=xterm' >> $build/.profile.d/tmate.sh
echo 'ssh-keygen -q -t rsa -f /home/vcap/.ssh/id_rsa -N ""' >> $build/.profile.d/tmate.sh
